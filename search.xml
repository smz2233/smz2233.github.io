<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>简易座位预订程序</title>
      <link href="/2023/11/23/jian-yi-zuo-wei-yu-ding-cheng-xu/"/>
      <url>/2023/11/23/jian-yi-zuo-wei-yu-ding-cheng-xu/</url>
      
        <content type="html"><![CDATA[<h5 id="操作系统：Windows-10"><a href="#操作系统：Windows-10" class="headerlink" title="操作系统：Windows 10"></a>操作系统：Windows 10</h5><h5 id="编译器：TDM-GCC-10-3-0-64-bit-Release"><a href="#编译器：TDM-GCC-10-3-0-64-bit-Release" class="headerlink" title="编译器：TDM-GCC 10.3.0 64-bit Release"></a>编译器：TDM-GCC 10.3.0 64-bit Release</h5><h5 id="实现功能：座位预订"><a href="#实现功能：座位预订" class="headerlink" title="实现功能：座位预订"></a>实现功能：座位预订</h5><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdbool.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ctype.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LEN</span> <span class="token expression"><span class="token number">14</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">SEATS</span> <span class="token expression"><span class="token number">12</span></span><span class="token comment">// 座位总数</span></span><span class="token keyword">struct</span> <span class="token class-name">planestats</span> <span class="token punctuation">&#123;</span><span class="token comment">// 建立planestats模板</span><span class="token keyword">int</span> seat_id<span class="token punctuation">;</span>bool status<span class="token punctuation">;</span><span class="token keyword">char</span> last<span class="token punctuation">[</span>LEN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">char</span> first<span class="token punctuation">[</span>LEN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">int</span> empty_num<span class="token punctuation">;</span><span class="token comment">// 记录未被预订的座位数</span><span class="token keyword">static</span> bool empty_status<span class="token punctuation">[</span>SEATS<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 记录每个座位的预订状态(true为已被预订, false为未被预订)</span><span class="token keyword">void</span> <span class="token function">eatline</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 清空输入缓冲区</span><span class="token keyword">char</span> <span class="token function">showmenu</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 显示菜单并获取用户的选择</span><span class="token keyword">void</span> <span class="token function">showlist</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 输出未被预订的座位列表</span><span class="token keyword">void</span> <span class="token function">show_ety_num</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 显示未被预订的座位数</span><span class="token keyword">void</span> <span class="token function">show_ety_list</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 显示未被预订的座位列表</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">s_gets</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>st<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 从标准输入读入数据</span><span class="token keyword">void</span> <span class="token function">assign_seat</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">planestats</span> plane<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 预订座位</span><span class="token keyword">void</span> <span class="token function">delete_seat</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">planestats</span> plane<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 取消预订座位</span><span class="token keyword">void</span> <span class="token function">makelist</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">planestats</span> plane<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 记录未被预订的座位数和每个座位的预订状态</span><span class="token keyword">void</span> <span class="token function">ranklist</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">planestats</span> plane<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 显示按预订人姓名顺序排列的座位列表</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> choice<span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">planestats</span> plane<span class="token punctuation">[</span>SEATS<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> index<span class="token operator">&lt;</span>SEATS<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span>plane<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>status <span class="token operator">=</span> false<span class="token punctuation">;</span><span class="token function">makelist</span><span class="token punctuation">(</span>plane<span class="token punctuation">,</span> SEATS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>choice<span class="token operator">=</span><span class="token function">showmenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">'f'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">switch</span><span class="token punctuation">(</span>choice<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token char">'a'</span><span class="token operator">:</span><span class="token function">show_ety_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token char">'b'</span><span class="token operator">:</span><span class="token function">show_ety_list</span><span class="token punctuation">(</span>SEATS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token char">'c'</span><span class="token operator">:</span><span class="token function">ranklist</span><span class="token punctuation">(</span>plane<span class="token punctuation">,</span> SEATS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token char">'d'</span><span class="token operator">:</span><span class="token function">assign_seat</span><span class="token punctuation">(</span>plane<span class="token punctuation">,</span> SEATS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token char">'e'</span><span class="token operator">:</span><span class="token function">delete_seat</span><span class="token punctuation">(</span>plane<span class="token punctuation">,</span> SEATS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Bye."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明：显示按预订人姓名顺序排列的座位列表Parameters:*plane -结构数组指针n -座位总数    Returns:voidModify:2023-11-23*/</span><span class="token keyword">void</span> <span class="token function">ranklist</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">planestats</span> plane<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> num <span class="token operator">=</span> n<span class="token operator">-</span>empty_num<span class="token punctuation">;</span><span class="token keyword">int</span> seat<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 记录已被预订的座位id</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">;</span><span class="token keyword">int</span> ret<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"All seats are empty."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>empty_status<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>seat<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>j <span class="token operator">==</span> num<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>k <span class="token operator">=</span> i<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>num<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ret<span class="token operator">=</span><span class="token function">strcmp</span><span class="token punctuation">(</span>plane<span class="token punctuation">[</span>seat<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>first<span class="token punctuation">,</span> plane<span class="token punctuation">[</span>seat<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>first<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 如果两人的first name不相同</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>k <span class="token operator">=</span> j<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>plane<span class="token punctuation">[</span>seat<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>last<span class="token punctuation">,</span> plane<span class="token punctuation">[</span>seat<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>last<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>k <span class="token operator">=</span> j<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>k <span class="token operator">!=</span> i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> temp <span class="token operator">=</span> seat<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>seat<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> seat<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>seat<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Seat %2d: %s %s\n"</span><span class="token punctuation">,</span> seat<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> plane<span class="token punctuation">[</span>seat<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>first<span class="token punctuation">,</span> plane<span class="token punctuation">[</span>seat<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>last<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明：预订座位Parameters:*plane -结构数组指针n -座位总数    Returns:voidModify:2023-11-23*/</span><span class="token keyword">void</span> <span class="token function">assign_seat</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">planestats</span> plane<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> seat_num <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">char</span> ch<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>empty_num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"All seats are assigned."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>empty_num <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// 如果只剩一个未被预订的座位</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> index<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>empty_status<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>seat_num <span class="token operator">=</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// 未被预订的座位编号</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Only seat %d is available, do you want it?\n"</span><span class="token punctuation">,</span> seat_num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Enter y for yes, others for no: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">do</span><span class="token punctuation">&#123;</span>ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">isspace</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">tolower</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">'y'</span><span class="token punctuation">)</span>seat_num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>seat_num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">do</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Which seat do you want? Choose from this list(q to quit):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">showlist</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>seat_num<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>ch<span class="token operator">=</span><span class="token function">tolower</span><span class="token punctuation">(</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token char">'q'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>seat_num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>seat_num<span class="token operator">&lt;</span><span class="token number">1</span> <span class="token operator">||</span> seat_num<span class="token operator">></span>SEATS <span class="token operator">||</span> empty_status<span class="token punctuation">[</span>seat_num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>seat_num <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">do</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Enter first name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">s_gets</span><span class="token punctuation">(</span>plane<span class="token punctuation">[</span>seat_num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>first<span class="token punctuation">,</span> LEN<span class="token punctuation">)</span><span class="token operator">==</span><span class="token constant">NULL</span> <span class="token operator">||</span> plane<span class="token punctuation">[</span>seat_num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>first<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token char">'\0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">do</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Enter last name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">s_gets</span><span class="token punctuation">(</span>plane<span class="token punctuation">[</span>seat_num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>last<span class="token punctuation">,</span> LEN<span class="token punctuation">)</span><span class="token operator">==</span><span class="token constant">NULL</span> <span class="token operator">||</span> plane<span class="token punctuation">[</span>seat_num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>last<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token char">'\0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s %s assigned to seat %d\n"</span><span class="token punctuation">,</span> plane<span class="token punctuation">[</span>seat_num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>first<span class="token punctuation">,</span> plane<span class="token punctuation">[</span>seat_num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>last<span class="token punctuation">,</span> seat_num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Enter a to accept assignment, c to cancel it."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">strchr</span><span class="token punctuation">(</span><span class="token string">"ac"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ch<span class="token operator">=</span><span class="token function">tolower</span><span class="token punctuation">(</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isspace</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Enter a character in the list ac"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">'a'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Passenger assigned to seat."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>plane<span class="token punctuation">[</span>seat_num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>status <span class="token operator">=</span> true<span class="token punctuation">;</span><span class="token function">makelist</span><span class="token punctuation">(</span>plane<span class="token punctuation">,</span> SEATS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Passenger not assigned."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>seat_num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Booking failed."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明：取消预订座位Parameters:*plane -结构数组指针n -座位总数    Returns:voidModify:2023-11-23*/</span><span class="token keyword">void</span> <span class="token function">delete_seat</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">planestats</span> plane<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> seat_num <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">char</span> ch<span class="token punctuation">;</span><span class="token keyword">int</span> num <span class="token operator">=</span> n<span class="token operator">-</span>empty_num<span class="token punctuation">;</span><span class="token keyword">int</span> seat<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 记录已被预订的座位id</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> index<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>empty_status<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>seat<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> index<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>j <span class="token operator">==</span> num<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>empty_num <span class="token operator">==</span> n<span class="token punctuation">)</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"All seats already are empty."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>seat_num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Seats currently taken:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> index<span class="token operator">&lt;</span>num<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Seat %d: %s %s\n"</span><span class="token punctuation">,</span> seat<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> plane<span class="token punctuation">[</span>seat<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>first<span class="token punctuation">,</span> plane<span class="token punctuation">[</span>seat<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>last<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Enter the number of the seat to be cancelled(q to quit):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>seat_num<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span> <span class="token operator">||</span> <span class="token punctuation">(</span>ch<span class="token operator">=</span><span class="token function">tolower</span><span class="token punctuation">(</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token char">'q'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>seat_num<span class="token operator">>=</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> seat_num<span class="token operator">&lt;=</span>SEATS <span class="token operator">&amp;&amp;</span> empty_status<span class="token punctuation">[</span>seat_num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>seat_num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Enter a number from this list:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> index<span class="token operator">&lt;</span>num<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> seat<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">putchar</span><span class="token punctuation">(</span><span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>seat_num <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s %s to be canceled for seat %d.\n"</span><span class="token punctuation">,</span> plane<span class="token punctuation">[</span>seat_num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>first<span class="token punctuation">,</span> plane<span class="token punctuation">[</span>seat_num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>last<span class="token punctuation">,</span> seat_num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Enter d to delete assignment, a to abort."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">strchr</span><span class="token punctuation">(</span><span class="token string">"ad"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ch<span class="token operator">=</span><span class="token function">tolower</span><span class="token punctuation">(</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isspace</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Enter a character in the list ad"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">'d'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Passenger dropped."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>plane<span class="token punctuation">[</span>seat_num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>status <span class="token operator">=</span> false<span class="token punctuation">;</span><span class="token function">makelist</span><span class="token punctuation">(</span>plane<span class="token punctuation">,</span> SEATS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Passenger retained."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>seat_num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Unsubscribe failed."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明：显示未被预订的座位列表    Parameters:n -座位总数Returns:voidModify:2023-11-23*/</span><span class="token keyword">void</span> <span class="token function">show_ety_list</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>empty_num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"All seats are assigned."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>empty_num <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"The following seat is available."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"The following seats are available."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">showlist</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明；显示未被预订的座位数Parameters:void    Returns:voidModify:2023-11-23*/</span><span class="token keyword">void</span> <span class="token function">show_ety_num</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>empty_num <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"There is 1 empty seat."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"There are %d empty seats.\n"</span><span class="token punctuation">,</span> empty_num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明；记录未被预订的座位数和每个座位的预订状态Parameters:*plane -结构数组指针n -座位总数    Returns:voidModify:2023-11-23*/</span><span class="token keyword">void</span> <span class="token function">makelist</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">planestats</span> plane<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> index<span class="token punctuation">;</span>empty_num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> index<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>empty_status<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> plane<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>status<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>empty_status<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>empty_num<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明：输出未被预订的座位列表    Parameters:n -座位总数Returns:voidModify:2023-11-23*/</span><span class="token keyword">void</span> <span class="token function">showlist</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> ipnum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> index<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>empty_status<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ipnum<span class="token operator">++</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ipnum <span class="token operator">==</span> empty_num<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">putchar</span><span class="token punctuation">(</span><span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 函数说明：显示菜单并获取用户的选择    Parameters:voidReturns:ch -用户的选择Modify:2023-11-23*/</span><span class="token keyword">char</span> <span class="token function">showmenu</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> ch<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"To choose a function, enter its letter label:\n"</span>   <span class="token string">"a) Show number of empty seats\n"</span>   <span class="token string">"b) Show list of empty seats\n"</span>   <span class="token string">"c) Show alphabetical list of seats\n"</span>   <span class="token string">"d) Assign a customer to a seat assignment\n"</span>   <span class="token string">"e) Delete a seat assignment\n"</span>   <span class="token string">"f) Quit\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">strchr</span><span class="token punctuation">(</span><span class="token string">"abcdef"</span><span class="token punctuation">,</span> ch<span class="token operator">=</span><span class="token function">tolower</span><span class="token punctuation">(</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isspace</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Enter a character in the list abcdef"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> ch<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明：从标准输入读入数据    Parameters:*st -字符串数组指针n -读入字符的最大数量    Returns:*ret_val -fgets()函数返回地址    Modify:2023-11-20*/</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">s_gets</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>st<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> <span class="token operator">*</span>ret_val<span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token operator">*</span>find<span class="token punctuation">;</span>ret_val <span class="token operator">=</span> <span class="token function">fgets</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span> n<span class="token punctuation">,</span> <span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ret_val<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>find <span class="token operator">=</span> <span class="token function">strchr</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span> <span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 查找换行符</span><span class="token keyword">if</span><span class="token punctuation">(</span>find<span class="token punctuation">)</span><span class="token comment">// 如果地址不是NULL</span><span class="token operator">*</span>find <span class="token operator">=</span> <span class="token char">'\0'</span><span class="token punctuation">;</span><span class="token comment">// 在此处放置一个空字符</span>        <span class="token keyword">else</span>            <span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 处理输入行中剩余的字符</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> ret_val<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 函数说明：清空输入缓冲区    Parameters:voidReturns:voidModify:2023-11-20          */</span><span class="token keyword">void</span> <span class="token function">eatline</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>交替打印文件内容</title>
      <link href="/2023/11/22/jiao-ti-da-yin-wen-jian-nei-rong/"/>
      <url>/2023/11/22/jiao-ti-da-yin-wen-jian-nei-rong/</url>
      
        <content type="html"><![CDATA[<h5 id="操作系统：Windows-10"><a href="#操作系统：Windows-10" class="headerlink" title="操作系统：Windows 10"></a>操作系统：Windows 10</h5><h5 id="编译器：TDM-GCC-10-3-0-64-bit-Release"><a href="#编译器：TDM-GCC-10-3-0-64-bit-Release" class="headerlink" title="编译器：TDM-GCC 10.3.0 64-bit Release"></a>编译器：TDM-GCC 10.3.0 64-bit Release</h5><h5 id="注意事项：Win10系统文件结束符既可以在空行的开始位置，也可以在一行的结束位置"><a href="#注意事项：Win10系统文件结束符既可以在空行的开始位置，也可以在一行的结束位置" class="headerlink" title="注意事项：Win10系统文件结束符既可以在空行的开始位置，也可以在一行的结束位置"></a>注意事项：Win10系统文件结束符既可以在空行的开始位置，也可以在一行的结束位置</h5><pre class="line-numbers language-C" data-language="C"><code class="language-C">&#x2F;* 13-7a -- 将两个文件中的内容逐行交替打印直到行数较多文件的最后一行 *&#x2F;#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;stdbool.h&gt;int main(int argc, char *argv[])&#123;FILE *f1, *f2;char ch1, ch2;bool flag1, flag2;if(argc !&#x3D; 3)&#123;fprintf(stderr, &quot;Usage: %s [filename1] [filename2]\n&quot;, argv[0]);exit(EXIT_FAILURE);&#125;if((f1&#x3D;fopen(argv[1], &quot;r&quot;)) &#x3D;&#x3D; NULL)&#123;fprintf(stderr, &quot;Can&#39;t open file %s.\n&quot;, argv[1]);exit(EXIT_FAILURE);&#125;if((f2&#x3D;fopen(argv[2], &quot;r&quot;)) &#x3D;&#x3D; NULL)&#123;fprintf(stderr, &quot;Can&#39;t open file %s.\n&quot;, argv[2]);exit(EXIT_FAILURE);&#125;ch1 &#x3D; getc(f1);if(ch1)flag1 &#x3D; true; ch2 &#x3D; getc(f2); if(ch2)flag2 &#x3D; true; while(ch1 !&#x3D; EOF || ch2 !&#x3D; EOF)&#123;while(ch1 !&#x3D; EOF &amp;&amp; ch1 !&#x3D; &#39;\n&#39;)&#123;putchar(ch1);ch1 &#x3D; getc(f1);&#125;if(ch1!&#x3D;EOF &amp;&amp; (ch1&#x3D;getc(f1))!&#x3D;EOF)&#x2F;&#x2F; 如果文件1内容未读完putchar(&#39;\n&#39;);else if(flag1 &amp;&amp; ch2!&#x3D;EOF)&#x2F;&#x2F; 如果文件1内容刚读完且文件2内容未读完&#123;putchar(&#39;\n&#39;);flag1 &#x3D; false;&#125;while(ch2!&#x3D;EOF &amp;&amp; ch2!&#x3D;&#39;\n&#39;)&#123;putchar(ch2);ch2 &#x3D; getc(f2);&#125;if(ch2!&#x3D;EOF &amp;&amp; (ch2&#x3D;getc(f2))!&#x3D;EOF)&#x2F;&#x2F; 如果文件2内容未读完putchar(&#39;\n&#39;);else if(flag2 &amp;&amp; ch1!&#x3D; EOF)&#x2F;&#x2F; 如果文件2内容刚读完且文件1内容未读完&#123;putchar(&#39;\n&#39;);flag2 &#x3D; false;&#125;&#125;if (fclose(f1) !&#x3D; 0)printf(&quot;Could not close file %s\n&quot;, argv[1]);if (fclose(f2) !&#x3D; 0)printf(&quot;Could not close file %s\n&quot;, argv[2]);return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/* 13-7b -- 将两个文件中行号相同的行打印成一行 */</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdbool.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>FILE <span class="token operator">*</span>f1<span class="token punctuation">,</span> <span class="token operator">*</span>f2<span class="token punctuation">;</span><span class="token keyword">int</span> ch1<span class="token punctuation">,</span> ch2<span class="token punctuation">;</span>bool flag1<span class="token punctuation">,</span> flag2<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">"Usage: %s [filename1] [filename2]\n"</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>f1<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">"Can't open file %s.\n"</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>f2<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">"Can't open file %s.\n"</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>ch1 <span class="token operator">=</span> <span class="token function">getc</span><span class="token punctuation">(</span>f1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ch1<span class="token punctuation">)</span>flag1 <span class="token operator">=</span> true<span class="token punctuation">;</span> ch2 <span class="token operator">=</span> <span class="token function">getc</span><span class="token punctuation">(</span>f2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span>ch2<span class="token punctuation">)</span>flag2 <span class="token operator">=</span> true<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>ch1 <span class="token operator">!=</span> <span class="token constant">EOF</span> <span class="token operator">||</span> ch2 <span class="token operator">!=</span> <span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">while</span><span class="token punctuation">(</span>ch1 <span class="token operator">!=</span> <span class="token constant">EOF</span> <span class="token operator">&amp;&amp;</span> ch1 <span class="token operator">!=</span> <span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">putchar</span><span class="token punctuation">(</span>ch1<span class="token punctuation">)</span><span class="token punctuation">;</span>ch1 <span class="token operator">=</span> <span class="token function">getc</span><span class="token punctuation">(</span>f1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ch1<span class="token operator">!=</span><span class="token constant">EOF</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>ch1<span class="token operator">=</span><span class="token function">getc</span><span class="token punctuation">(</span>f1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token comment">// 如果文件1内容未读完</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ch2 <span class="token operator">!=</span> <span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token function">putchar</span><span class="token punctuation">(</span><span class="token char">' '</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span><span class="token function">putchar</span><span class="token punctuation">(</span><span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>flag1 <span class="token operator">&amp;&amp;</span> ch2<span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token comment">// 如果文件1内容刚读完且文件2内容未读完</span><span class="token punctuation">&#123;</span><span class="token function">putchar</span><span class="token punctuation">(</span><span class="token char">' '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>flag1 <span class="token operator">=</span> false<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>ch2<span class="token operator">!=</span><span class="token constant">EOF</span> <span class="token operator">&amp;&amp;</span> ch2<span class="token operator">!=</span><span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">putchar</span><span class="token punctuation">(</span>ch2<span class="token punctuation">)</span><span class="token punctuation">;</span>ch2 <span class="token operator">=</span> <span class="token function">getc</span><span class="token punctuation">(</span>f2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ch2<span class="token operator">!=</span><span class="token constant">EOF</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>ch2<span class="token operator">=</span><span class="token function">getc</span><span class="token punctuation">(</span>f2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token comment">// 如果文件2内容未读完</span><span class="token function">putchar</span><span class="token punctuation">(</span><span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>flag2 <span class="token operator">&amp;&amp;</span> ch1<span class="token operator">!=</span> <span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token comment">// 如果文件2内容刚读完且文件1内容未读完</span><span class="token punctuation">&#123;</span><span class="token function">putchar</span><span class="token punctuation">(</span><span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>flag2 <span class="token operator">=</span> false<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">fclose</span><span class="token punctuation">(</span>f1<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Could not close file %s\n"</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">fclose</span><span class="token punctuation">(</span>f2<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Could not close file %s\n"</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图书库二进制文件</title>
      <link href="/2023/11/21/tu-shu-ku-er-jin-zhi-wen-jian/"/>
      <url>/2023/11/21/tu-shu-ku-er-jin-zhi-wen-jian/</url>
      
        <content type="html"><![CDATA[<h5 id="操作系统：Windows-10"><a href="#操作系统：Windows-10" class="headerlink" title="操作系统：Windows 10"></a>操作系统：Windows 10</h5><h5 id="编译器：TDM-GCC-10-3-0-64-bit-Release"><a href="#编译器：TDM-GCC-10-3-0-64-bit-Release" class="headerlink" title="编译器：TDM-GCC 10.3.0 64-bit Release"></a>编译器：TDM-GCC 10.3.0 64-bit Release</h5><h5 id="实现功能：从二进制文件中读取每条记录并显示出来，允许用户新增记录、删除记录或修改记录的内容"><a href="#实现功能：从二进制文件中读取每条记录并显示出来，允许用户新增记录、删除记录或修改记录的内容" class="headerlink" title="实现功能：从二进制文件中读取每条记录并显示出来，允许用户新增记录、删除记录或修改记录的内容"></a>实现功能：从二进制文件中读取每条记录并显示出来，允许用户新增记录、删除记录或修改记录的内容</h5><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdbool.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXTITL</span> <span class="token expression"><span class="token number">40</span></span><span class="token comment">// 书名最大长度</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXAUTL</span> <span class="token expression"><span class="token number">40</span></span><span class="token comment">// 作者名最大长度</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXBKS</span> <span class="token expression"><span class="token number">10</span></span><span class="token comment">// 图书的最大数量</span></span><span class="token keyword">struct</span> <span class="token class-name">book</span> <span class="token punctuation">&#123;</span><span class="token comment">// 建立book模板</span><span class="token keyword">char</span> title<span class="token punctuation">[</span>MAXTITL<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">char</span> author<span class="token punctuation">[</span>MAXAUTL<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">float</span> value<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">pack</span> <span class="token punctuation">&#123;</span><span class="token comment">// 增加删除和修改标志位</span><span class="token keyword">struct</span> <span class="token class-name">book</span> book<span class="token punctuation">;</span>bool delete_me<span class="token punctuation">;</span>bool revise_me<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">book</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// book模板字节数</span><span class="token keyword">static</span> <span class="token keyword">char</span> filename<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"book.dat"</span><span class="token punctuation">;</span><span class="token comment">// 图书库文件名称</span><span class="token keyword">void</span> <span class="token function">eatline</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 清空输入缓冲区</span><span class="token keyword">int</span> <span class="token function">showmenu</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 显示菜单并获取用户的选择</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">s_gets</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>st<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 从标准输入读入数据</span><span class="token keyword">int</span> <span class="token function">delrecord</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">pack</span> library<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> filecount<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 删除图书记录</span><span class="token keyword">int</span> <span class="token function">addrecord</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">pack</span> library<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> filecount<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 新增图书记录</span><span class="token keyword">void</span> <span class="token function">modrecord</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">pack</span> library<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> filecount<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 修改图书记录</span><span class="token keyword">void</span> <span class="token function">showrecord</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">pack</span> library<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> filecount<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 输出当前结构数组中的图书记录</span><span class="token keyword">void</span> <span class="token function">wirterecord</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span>pbooks<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">pack</span> library<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> filecount<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 重写图书库文件内容</span><span class="token keyword">void</span> <span class="token function">reviserecord</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span>pbooks<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">pack</span> library<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> filecount<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 按需修改图书库文件内容</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">struct</span> <span class="token class-name">pack</span> library<span class="token punctuation">[</span>MAXBKS<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 结构数组</span><span class="token keyword">int</span> initial_count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">// 记录原始图书数量</span><span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">// 记录当前图书数量</span><span class="token keyword">int</span> choice<span class="token punctuation">;</span>FILE <span class="token operator">*</span>pbooks<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pbooks<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">"r+b"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">"Can't open %s file.\n"</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">rewind</span><span class="token punctuation">(</span>pbooks<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 定位到文件开始</span><span class="token keyword">while</span><span class="token punctuation">(</span>count<span class="token operator">&lt;</span>MAXBKS <span class="token operator">&amp;&amp;</span> <span class="token function">fread</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>library<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">,</span> size<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> pbooks<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Current contents of %s:\n"</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d.%s by %s: $%.2f\n"</span><span class="token punctuation">,</span> count<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> library<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">.</span>title<span class="token punctuation">,</span> library<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">.</span>author<span class="token punctuation">,</span> library<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>library<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">.</span>delete_me <span class="token operator">=</span> false<span class="token punctuation">;</span><span class="token comment">// 将删除标志位置为false</span>library<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">.</span>revise_me <span class="token operator">=</span> false<span class="token punctuation">;</span><span class="token comment">// 将修改标志位置为false</span>count<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>initial_count <span class="token operator">=</span> count<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"No books? Too bad."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>choice<span class="token operator">=</span><span class="token function">showmenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token comment">// 当用户的选择不是4时</span><span class="token punctuation">&#123;</span><span class="token keyword">switch</span><span class="token punctuation">(</span>choice<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>count <span class="token operator">=</span> <span class="token function">addrecord</span><span class="token punctuation">(</span>library<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 新增图书记录</span><span class="token function">showrecord</span><span class="token punctuation">(</span>library<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>count <span class="token operator">=</span> <span class="token function">delrecord</span><span class="token punctuation">(</span>library<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 删除图书记录</span><span class="token function">showrecord</span><span class="token punctuation">(</span>library<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span><span class="token function">modrecord</span><span class="token punctuation">(</span>library<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 修改图书记录</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>count<span class="token operator">&lt;</span>initial_count<span class="token punctuation">)</span><span class="token comment">// 如果当前图书数量小于原始图书数量, 则重写图书库文件</span><span class="token function">wirterecord</span><span class="token punctuation">(</span>pbooks<span class="token punctuation">,</span> library<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span><span class="token comment">// 否则, 按需修改图书库文件内容</span><span class="token function">reviserecord</span><span class="token punctuation">(</span>pbooks<span class="token punctuation">,</span> library<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Bye."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明：修改图书记录    Parameters:*library -结构数组指针filecount -当前图书数量    Returns:voidModify:2023-11-20*/</span><span class="token keyword">void</span> <span class="token function">modrecord</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">pack</span> library<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> filecount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> id<span class="token punctuation">,</span> index<span class="token punctuation">;</span><span class="token keyword">int</span> skipt<span class="token punctuation">;</span>bool modify<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>filecount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入你要修改的记录id(按q退出): "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>id<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>id<span class="token operator">&lt;</span><span class="token number">1</span> <span class="token operator">||</span> id<span class="token operator">></span>filecount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"没有编号为%d的记录.\n"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入其他要修改的记录id(按q退出): "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>skipt <span class="token operator">=</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">do</span><span class="token punctuation">&#123;</span><span class="token comment">// 找到记录id对应的下标</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>library<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">.</span>delete_me<span class="token punctuation">)</span>skipt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>skipt<span class="token operator">&lt;</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>modify <span class="token operator">=</span> false<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"修改金额请按1, 修改书名请按2, 修改作者请按3, 按其他键放弃修改: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>id<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">switch</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"输入修改后的金额, 非数字键退出."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%f"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>library<span class="token punctuation">[</span>index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>modify <span class="token operator">=</span> true<span class="token punctuation">;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> temp<span class="token punctuation">[</span>MAXTITL<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"输入修改后的书名, 空行退出."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">s_gets</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> MAXTITL<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">NULL</span> <span class="token operator">&amp;&amp;</span> temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token char">'\0'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>library<span class="token punctuation">[</span>index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">.</span>title<span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>modify <span class="token operator">=</span> true<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> temp<span class="token punctuation">[</span>MAXAUTL<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"输入修改后的作者名, 空行退出."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">s_gets</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> MAXTITL<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">NULL</span> <span class="token operator">&amp;&amp;</span> temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token char">'\0'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">strcpy</span><span class="token punctuation">(</span>library<span class="token punctuation">[</span>index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">.</span>author<span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>modify <span class="token operator">=</span> true<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>modify<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>library<span class="token punctuation">[</span>index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>revise_me <span class="token operator">=</span> true<span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Successfully modified."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Modification failed."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">showrecord</span><span class="token punctuation">(</span>library<span class="token punctuation">,</span> filecount<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入其他要修改的记录id(按q退出): "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"No books? Too bad."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明：删除图书记录    Parameters:*library -结构数组指针filecount -当前图书数量    Returns:count -进行删除操作后剩余的图书数量Modify:2023-11-20              */</span><span class="token keyword">int</span> <span class="token function">delrecord</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">pack</span> library<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> filecount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> id<span class="token punctuation">,</span> index<span class="token punctuation">,</span> count <span class="token operator">=</span> filecount<span class="token punctuation">;</span><span class="token keyword">int</span> skipt<span class="token punctuation">;</span>bool delme<span class="token punctuation">[</span>filecount<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 删除标志位数组</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>filecount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>delme<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> false<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>filecount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入你要删除的记录id(按q退出): "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>id<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>id<span class="token operator">&lt;</span><span class="token number">1</span> <span class="token operator">||</span> id<span class="token operator">></span>filecount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"没有编号为%d的记录.\n"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入其他要删除的记录id(按q退出): "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>delme<span class="token punctuation">[</span>id<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"编号为%d的记录已删除.\n"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>skipt <span class="token operator">=</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">do</span><span class="token punctuation">&#123;</span><span class="token comment">// 找到记录id对应的下标</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>library<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">.</span>delete_me<span class="token punctuation">)</span>skipt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>skipt<span class="token operator">&lt;</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>library<span class="token punctuation">[</span>index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>delete_me <span class="token operator">=</span> true<span class="token punctuation">;</span>delme<span class="token punctuation">[</span>id<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> true<span class="token punctuation">;</span><span class="token comment">// 将删除标志位置为true</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">--</span>count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入其他要删除的记录id(按q退出): "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> count<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明：新增图书记录    Parameters:*library -结构数组指针filecount -当前图书数量    Returns:count -进行新增图书操作后的图书数量Modify:2023-11-20              */</span><span class="token keyword">int</span> <span class="token function">addrecord</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">pack</span> library<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> filecount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>filecount <span class="token operator">==</span> MAXBKS<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">"The %s file is full.\n"</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Please add new book titles."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Press [enter] at the start of a line to stop."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>id <span class="token operator">&lt;</span> MAXBKS<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>id<span class="token operator">&lt;</span>filecount <span class="token operator">&amp;&amp;</span> library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>delete_me<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>id <span class="token operator">==</span> filecount<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 判断当前记录是否被删除或为空记录</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">s_gets</span><span class="token punctuation">(</span>library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">.</span>title<span class="token punctuation">,</span> MAXTITL<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">NULL</span> <span class="token operator">&amp;&amp;</span> library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">.</span>title<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token char">'\0'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Now enter the author.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">s_gets</span><span class="token punctuation">(</span>library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">.</span>author<span class="token punctuation">,</span> MAXAUTL<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Now enter the value.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%f"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>delete_me <span class="token operator">=</span> false<span class="token punctuation">;</span><span class="token comment">// 将删除标志位置为false</span>library<span class="token punctuation">[</span>id<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">.</span>revise_me <span class="token operator">=</span> true<span class="token punctuation">;</span><span class="token comment">// 将修改标志位置为true</span>filecount<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>id<span class="token operator">++</span><span class="token punctuation">;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>filecount <span class="token operator">&lt;</span> MAXBKS<span class="token punctuation">)</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Enter the next title."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span>  <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The %s file is full.\n"</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> filecount<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明：按需修改图书库文件内容    Parameters:*pbooks -图书库文件指针*library -结构数组指针filecount -当前图书数量    Returns:voidModify:2023-11-20              */</span><span class="token keyword">void</span> <span class="token function">reviserecord</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span>pbooks<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">pack</span> library<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> filecount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">long</span> pos<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>id<span class="token operator">&lt;</span>MAXBKS <span class="token operator">&amp;&amp;</span> count<span class="token operator">&lt;</span>filecount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>delete_me<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>revise_me<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>pos <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>id <span class="token operator">*</span> size<span class="token punctuation">;</span><span class="token comment">// 计算偏移量</span><span class="token function">fseek</span><span class="token punctuation">(</span>pbooks<span class="token punctuation">,</span> pos<span class="token punctuation">,</span> <span class="token constant">SEEK_SET</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 定位到此处</span><span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">,</span> size<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> pbooks<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>count<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>id<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">fclose</span><span class="token punctuation">(</span>pbooks<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">"Can't close file %s.\n"</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明：重写图书库文件    Parameters:*pbooks -图书库文件指针*library -结构数组指针filecount -当前图书数量    Returns:voidModify:2023-11-20              */</span><span class="token keyword">void</span> <span class="token function">wirterecord</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span>pbooks<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">pack</span> library<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> filecount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">fclose</span><span class="token punctuation">(</span>pbooks<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">"Can't close file %s.\n"</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pbooks<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"book.dat"</span><span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">"Can't revise file %s.\n"</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">rewind</span><span class="token punctuation">(</span>pbooks<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 定位到文件开始</span><span class="token keyword">while</span><span class="token punctuation">(</span>id<span class="token operator">&lt;</span>MAXBKS <span class="token operator">&amp;&amp;</span> count<span class="token operator">&lt;</span>filecount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>delete_me<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">,</span> size<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> pbooks<span class="token punctuation">)</span><span class="token punctuation">;</span>count<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>id<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">fclose</span><span class="token punctuation">(</span>pbooks<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*函数说明：输出当前结构数组中的图书记录    Parameters:*library -结构数组指针filecount -当前图书数量    Returns:voidModify:2023-11-20              */</span><span class="token keyword">void</span> <span class="token function">showrecord</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">pack</span> library<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> filecount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> id<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>filecount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> id<span class="token operator">&lt;</span>MAXBKS<span class="token punctuation">;</span> id<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>id <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Current contents of %s:\n"</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>delete_me<span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d.%s by %s: $%.2f\n"</span><span class="token punctuation">,</span> <span class="token operator">++</span>count<span class="token punctuation">,</span> library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">.</span>title<span class="token punctuation">,</span> library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">.</span>author<span class="token punctuation">,</span> library<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>book<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">==</span> filecount<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"No books? Too bad."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 函数说明：显示菜单并获取用户的选择    Parameters:voidReturns:ret -用户的选择Modify:2023-11-20*/</span><span class="token keyword">int</span> <span class="token function">showmenu</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"1) 新增记录  2) 删除记录\n"</span>   <span class="token string">"3) 修改记录  4) 退出\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入您的选择: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>ret<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>ret<span class="token operator">&lt;</span><span class="token number">1</span> <span class="token operator">||</span> ret<span class="token operator">></span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入1~4的正整数: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>ret<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> ret<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*  函数说明：从标准输入读入数据    Parameters:*st -字符串数组指针n -读入字符的最大数量    Returns:*ret_val -fgets()函数返回地址    Modify:2023-11-20                      */</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">s_gets</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>st<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> <span class="token operator">*</span>ret_val<span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token operator">*</span>find<span class="token punctuation">;</span>ret_val <span class="token operator">=</span> <span class="token function">fgets</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span> n<span class="token punctuation">,</span> <span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ret_val<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>find <span class="token operator">=</span> <span class="token function">strchr</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span> <span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 查找换行符</span><span class="token keyword">if</span><span class="token punctuation">(</span>find<span class="token punctuation">)</span><span class="token comment">// 如果地址不是NULL</span><span class="token operator">*</span>find <span class="token operator">=</span> <span class="token char">'\0'</span><span class="token punctuation">;</span><span class="token comment">// 在此处放置一个空字符</span>        <span class="token keyword">else</span>            <span class="token function">eatline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 处理输入行中剩余的字符</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> ret_val<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 函数说明：清空输入缓冲区    Parameters:voidReturns:voidModify:2023-11-20          */</span><span class="token keyword">void</span> <span class="token function">eatline</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查找子字符串</title>
      <link href="/2023/11/07/cha-zhao-zi-zi-fu-chuan/"/>
      <url>/2023/11/07/cha-zhao-zi-zi-fu-chuan/</url>
      
        <content type="html"><![CDATA[<h5 id="操作系统：Windows-10"><a href="#操作系统：Windows-10" class="headerlink" title="操作系统：Windows 10"></a>操作系统：Windows 10</h5><h5 id="编译器：TDM-GCC-10-3-0-64-bit-Release"><a href="#编译器：TDM-GCC-10-3-0-64-bit-Release" class="headerlink" title="编译器：TDM-GCC 10.3.0 64-bit Release"></a>编译器：TDM-GCC 10.3.0 64-bit Release</h5><h5 id="实现功能：strstr-函数"><a href="#实现功能：strstr-函数" class="headerlink" title="实现功能：strstr()函数"></a>实现功能：strstr()函数</h5><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/*函数说明：在一个字符串中查找指定的字符串 Parameters:bstr -被查找的字符串地址sstr -要查找的子字符串地址 Returns:find -指向bstr字符串中sstr出现的首位置, 未搜索到子字符串则返回空指针 Modify:2023-11-08*/</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">string_in</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>bstr<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>sstr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>pb <span class="token operator">=</span> bstr<span class="token punctuation">,</span> <span class="token operator">*</span>ps <span class="token operator">=</span> sstr<span class="token punctuation">,</span> <span class="token operator">*</span>find <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">*</span>pb<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>find <span class="token operator">=</span> pb<span class="token punctuation">;</span>ps <span class="token operator">=</span> sstr<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">*</span>pb<span class="token operator">==</span><span class="token operator">*</span>ps <span class="token operator">&amp;&amp;</span> <span class="token operator">*</span>ps<span class="token operator">!=</span><span class="token char">'\0'</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">*</span>pb<span class="token operator">!=</span><span class="token char">'\0'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>ps<span class="token operator">++</span><span class="token punctuation">;</span>pb<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">*</span>ps <span class="token operator">==</span> <span class="token char">'\0'</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">*</span>pb <span class="token operator">==</span> <span class="token char">'\0'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>find <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ps <span class="token operator">==</span> sstr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>pb<span class="token operator">++</span><span class="token punctuation">;</span>find <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span>find<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猜数程序</title>
      <link href="/2023/10/26/cai-shu-cheng-xu/"/>
      <url>/2023/10/26/cai-shu-cheng-xu/</url>
      
        <content type="html"><![CDATA[<h5 id="操作系统：Windows-10"><a href="#操作系统：Windows-10" class="headerlink" title="操作系统：Windows 10"></a>操作系统：Windows 10</h5><h5 id="编译器：TDM-GCC-10-3-0-64-bit-Release"><a href="#编译器：TDM-GCC-10-3-0-64-bit-Release" class="headerlink" title="编译器：TDM-GCC 10.3.0 64-bit Release"></a>编译器：TDM-GCC 10.3.0 64-bit Release</h5><h5 id="实现功能：通过用户输入的上下界使用二分查找用户想象的整数"><a href="#实现功能：通过用户输入的上下界使用二分查找用户想象的整数" class="headerlink" title="实现功能：通过用户输入的上下界使用二分查找用户想象的整数"></a>实现功能：通过用户输入的上下界使用二分查找用户想象的整数</h5><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ctype.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdbool.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MIN</span> <span class="token expression"><span class="token operator">-</span><span class="token number">10000</span></span><span class="token comment">// 猜词下界(注意int类型) </span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX</span> <span class="token expression"><span class="token number">10000</span></span><span class="token comment">// 猜词上界(注意int类型) </span></span><span class="token keyword">char</span> <span class="token function">get_chars</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 从键盘获取输入的首个非空白字符 </span><span class="token keyword">int</span> <span class="token function">get_num</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 从键盘获取一个整数 </span>bool <span class="token function">examine</span><span class="token punctuation">(</span><span class="token keyword">int</span> min<span class="token punctuation">,</span> <span class="token keyword">int</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 检查用户输入的上下界是否合法 </span>bool <span class="token function">guess_num</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 猜数 </span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>bool flag <span class="token operator">=</span> true<span class="token punctuation">;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"这是一个猜数程序\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment">// 如果flag不为false则一直进行猜数程序(退出条件: 用户输入q) </span><span class="token punctuation">&#123;</span>flag <span class="token operator">=</span> <span class="token function">guess_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Bye.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*函数说明：猜测用户想象的数Parameters:voidReturns:recover -是否继续猜数标志位 Modify:2023-10-26*/</span> bool <span class="token function">guess_num</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> num<span class="token punctuation">,</span> left_num<span class="token punctuation">,</span> right_num<span class="token punctuation">;</span><span class="token keyword">int</span> last_num <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// 记录程序猜测的上一个数 </span><span class="token keyword">int</span> min<span class="token punctuation">,</span> revise_min<span class="token punctuation">,</span> max<span class="token punctuation">,</span> revise_max<span class="token punctuation">;</span>bool flag <span class="token operator">=</span> true<span class="token punctuation">;</span><span class="token comment">// 检查上下界合法标志位暨还原左右边界值标志位 </span>bool recover <span class="token operator">=</span> false<span class="token punctuation">;</span><span class="token comment">// 重置上下界标志位, true则重置上下界, false退出猜词程序 </span><span class="token keyword">char</span> ch<span class="token punctuation">;</span><span class="token keyword">do</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请告诉我下界(>-10000):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>min <span class="token operator">=</span> <span class="token function">get_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请告诉我上界(&lt;10000):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>max <span class="token operator">=</span> <span class="token function">get_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>flag <span class="token operator">=</span> <span class="token function">examine</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 循环运行直到用户输入的上下界合法 </span><span class="token comment">/* 修改初值以应对int类型转换的截断操作 */</span> revise_min <span class="token operator">=</span> min<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span> min<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> min<span class="token punctuation">;</span> revise_max <span class="token operator">=</span> max<span class="token operator">></span><span class="token number">0</span><span class="token operator">?</span> max<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">:</span> max<span class="token punctuation">;</span>num <span class="token operator">=</span> <span class="token punctuation">(</span>min<span class="token operator">+</span>max<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>left_num <span class="token operator">=</span> revise_min<span class="token punctuation">;</span><span class="token comment">// 二分法左边界 </span>right_num <span class="token operator">=</span> revise_max<span class="token punctuation">;</span><span class="token comment">// 二分法右边界 </span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"想象一个%d~%d的整数\n"</span>   <span class="token string">"猜对按y, 小了按s, 大了按b, 按r重置上下界, 按q退出\n"</span>   <span class="token string">"是%d吗?"</span><span class="token punctuation">,</span> min<span class="token punctuation">,</span> max<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ch<span class="token operator">=</span><span class="token function">get_chars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token char">'q'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">switch</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token char">'r'</span><span class="token operator">:</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"重置中, 请等待...\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>recover <span class="token operator">=</span> true<span class="token punctuation">;</span><span class="token comment">// 重置上下界 </span><span class="token keyword">goto</span> ret<span class="token punctuation">;</span><span class="token comment">// 跳转到ret处 </span><span class="token keyword">case</span> <span class="token char">'y'</span><span class="token operator">:</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"哈哈, 我猜对了。请想下一个数\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>flag<span class="token operator">=</span>true<span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token char">'s'</span><span class="token operator">:</span>last_num <span class="token operator">=</span> left_num <span class="token operator">=</span> num<span class="token punctuation">;</span><span class="token comment">// 更新左边界 </span>num <span class="token operator">=</span> <span class="token punctuation">(</span>left_num<span class="token operator">+</span>right_num<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token char">'b'</span><span class="token operator">:</span>last_num <span class="token operator">=</span> right_num <span class="token operator">=</span> num<span class="token punctuation">;</span><span class="token comment">// 更新右边界 </span>num <span class="token operator">=</span> <span class="token punctuation">(</span>left_num<span class="token operator">+</span>right_num<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"非法字符, 请重新输入:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 如果程序两次猜测的数相同, 则重新开始猜数 */</span> <span class="token keyword">if</span><span class="token punctuation">(</span>num <span class="token operator">==</span> last_num<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"对不起, 我还在努力学习如何猜其他类型的数, 目前我只能猜%d~%d的整数, 请重新想一个数\n"</span><span class="token punctuation">,</span> min<span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>flag<span class="token operator">=</span>true<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>num <span class="token operator">=</span> <span class="token punctuation">(</span>min<span class="token operator">+</span>max<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>last_num <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>left_num <span class="token operator">=</span> revise_min<span class="token punctuation">;</span>right_num <span class="token operator">=</span> revise_max<span class="token punctuation">;</span>flag <span class="token operator">=</span> false<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"是%d吗?"</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>ret<span class="token operator">:</span><span class="token keyword">return</span> recover<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*函数说明：从键盘获取输入的首个非空白字符 Parameters:voidReturns:ch -输入的首个非空白字符  Modify:2023-10-26*/</span><span class="token keyword">char</span> <span class="token function">get_chars</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> ch<span class="token punctuation">;</span><span class="token keyword">do</span><span class="token punctuation">&#123;</span>ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">isspace</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token function">tolower</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 函数说明：从键盘获取一个整数Parameters:voidReturnsnum -从键盘获取到的整数Modify:2023-10-26*/</span> <span class="token keyword">int</span> <span class="token function">get_num</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> num<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>num<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入一个整数:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token keyword">return</span> num<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*函数说明：检查用户输入的上下界是否合法 parameters:min -用户输入的下届max - 用户输入的上届Returns:examine -是否合法标志位Modify:2023-10-26*/</span> bool <span class="token function">examine</span><span class="token punctuation">(</span><span class="token keyword">int</span> min<span class="token punctuation">,</span> <span class="token keyword">int</span> max<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>bool examine_result <span class="token operator">=</span> true<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>min<span class="token operator">&lt;=</span>MIN <span class="token operator">||</span> max<span class="token operator">>=</span>MAX <span class="token operator">||</span> min<span class="token operator">></span>max<span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"非法上下限, 请重新输入\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>min <span class="token operator">==</span> max<span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入不相等的上下限\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span>examine_result <span class="token operator">=</span> false<span class="token punctuation">;</span><span class="token keyword">return</span> examine_result<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas常用函数和参数</title>
      <link href="/2023/10/13/pandas-chang-yong-han-shu-he-can-shu/"/>
      <url>/2023/10/13/pandas-chang-yong-han-shu-he-can-shu/</url>
      
        <content type="html"><![CDATA[<h3 id="一、读写文件"><a href="#一、读写文件" class="headerlink" title="一、读写文件"></a>一、读写文件</h3><h4 id="1-读csv文件"><a href="#1-读csv文件" class="headerlink" title="1. 读csv文件"></a>1. 读csv文件</h4><p><strong>pd.read_csv(path, usecols&#x3D;None, encoding&#x3D;None)</strong></p><ul><li><p>path: 表明文件系统位置的字符串，必选参数</p></li><li><p>usecols: 读取指定列，默认 usecols&#x3D;None</p><ul><li><p>使用示例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token operator">>></span><span class="token operator">></span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>path<span class="token punctuation">)</span>          Time   OPEN   HIGH    LOW  CLOSE<span class="token number">0</span>     <span class="token number">2022</span><span class="token operator">/</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">1</span>  <span class="token number">14.22</span>  <span class="token number">14.40</span>  <span class="token number">13.70</span>  <span class="token number">14.23</span><span class="token number">1</span>     <span class="token number">2022</span><span class="token operator">/</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">2</span>  <span class="token number">13.88</span>  <span class="token number">14.94</span>  <span class="token number">13.59</span>  <span class="token number">14.68</span><span class="token number">2</span>     <span class="token number">2022</span><span class="token operator">/</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">3</span>  <span class="token number">14.66</span>  <span class="token number">14.79</span>  <span class="token number">13.67</span>  <span class="token number">13.76</span><span class="token number">3</span>     <span class="token number">2022</span><span class="token operator">/</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">4</span>  <span class="token number">13.89</span>  <span class="token number">14.08</span>  <span class="token number">13.60</span>  <span class="token number">13.96</span><span class="token number">4</span>     <span class="token number">2022</span><span class="token operator">/</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">5</span>  <span class="token number">13.96</span>  <span class="token number">14.61</span>  <span class="token number">13.62</span>  <span class="token number">14.32</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">197</span>  <span class="token number">2023</span><span class="token operator">/</span><span class="token number">5</span><span class="token operator">/</span><span class="token number">25</span>  <span class="token number">11.25</span>  <span class="token number">11.32</span>  <span class="token number">11.13</span>  <span class="token number">11.19</span><span class="token number">198</span>  <span class="token number">2023</span><span class="token operator">/</span><span class="token number">5</span><span class="token operator">/</span><span class="token number">26</span>  <span class="token number">11.21</span>  <span class="token number">11.38</span>  <span class="token number">11.11</span>  <span class="token number">11.35</span><span class="token number">199</span>  <span class="token number">2023</span><span class="token operator">/</span><span class="token number">5</span><span class="token operator">/</span><span class="token number">29</span>  <span class="token number">11.35</span>  <span class="token number">11.86</span>  <span class="token number">11.30</span>  <span class="token number">11.73</span><span class="token number">200</span>  <span class="token number">2023</span><span class="token operator">/</span><span class="token number">5</span><span class="token operator">/</span><span class="token number">30</span>  <span class="token number">11.65</span>  <span class="token number">12.45</span>  <span class="token number">11.65</span>  <span class="token number">12.32</span><span class="token number">201</span>  <span class="token number">2023</span><span class="token operator">/</span><span class="token number">5</span><span class="token operator">/</span><span class="token number">31</span>  <span class="token number">12.30</span>  <span class="token number">12.34</span>  <span class="token number">12.08</span>  <span class="token number">12.09</span><span class="token punctuation">[</span><span class="token number">202</span> rows x <span class="token number">5</span> columns<span class="token punctuation">]</span><span class="token comment"># 选取OPEN列和CLOSE列</span><span class="token operator">>></span><span class="token operator">></span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>path<span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'OPEN'</span><span class="token punctuation">,</span> <span class="token string">'CLOSE'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      OPEN  CLOSE<span class="token number">0</span>    <span class="token number">14.22</span>  <span class="token number">14.23</span><span class="token number">1</span>    <span class="token number">13.88</span>  <span class="token number">14.68</span><span class="token number">2</span>    <span class="token number">14.66</span>  <span class="token number">13.76</span><span class="token number">3</span>    <span class="token number">13.89</span>  <span class="token number">13.96</span><span class="token number">4</span>    <span class="token number">13.96</span>  <span class="token number">14.32</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">197</span>  <span class="token number">11.25</span>  <span class="token number">11.19</span><span class="token number">198</span>  <span class="token number">11.21</span>  <span class="token number">11.35</span><span class="token number">199</span>  <span class="token number">11.35</span>  <span class="token number">11.73</span><span class="token number">200</span>  <span class="token number">11.65</span>  <span class="token number">12.32</span><span class="token number">201</span>  <span class="token number">12.30</span>  <span class="token number">12.09</span><span class="token punctuation">[</span><span class="token number">202</span> rows x <span class="token number">2</span> columns<span class="token punctuation">]</span><span class="token comment"># 选取前两列</span><span class="token operator">>></span><span class="token operator">></span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>path<span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      OPEN   HIGH<span class="token number">0</span>    <span class="token number">14.22</span>  <span class="token number">14.40</span><span class="token number">1</span>    <span class="token number">13.88</span>  <span class="token number">14.94</span><span class="token number">2</span>    <span class="token number">14.66</span>  <span class="token number">14.79</span><span class="token number">3</span>    <span class="token number">13.89</span>  <span class="token number">14.08</span><span class="token number">4</span>    <span class="token number">13.96</span>  <span class="token number">14.61</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">197</span>  <span class="token number">11.25</span>  <span class="token number">11.32</span><span class="token number">198</span>  <span class="token number">11.21</span>  <span class="token number">11.38</span><span class="token number">199</span>  <span class="token number">11.35</span>  <span class="token number">11.86</span><span class="token number">200</span>  <span class="token number">11.65</span>  <span class="token number">12.45</span><span class="token number">201</span>  <span class="token number">12.30</span>  <span class="token number">12.34</span><span class="token punctuation">[</span><span class="token number">202</span> rows x <span class="token number">2</span> columns<span class="token punctuation">]</span><span class="token comment"># 跳过Time列，目前未找到跳过第x列的方法</span><span class="token operator">>></span><span class="token operator">></span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>path<span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x <span class="token keyword">not</span> <span class="token keyword">in</span>                <span class="token punctuation">[</span><span class="token string">'Time'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      OPEN   HIGH    LOW  CLOSE<span class="token number">0</span>    <span class="token number">14.22</span>  <span class="token number">14.40</span>  <span class="token number">13.70</span>  <span class="token number">14.23</span><span class="token number">1</span>    <span class="token number">13.88</span>  <span class="token number">14.94</span>  <span class="token number">13.59</span>  <span class="token number">14.68</span><span class="token number">2</span>    <span class="token number">14.66</span>  <span class="token number">14.79</span>  <span class="token number">13.67</span>  <span class="token number">13.76</span><span class="token number">3</span>    <span class="token number">13.89</span>  <span class="token number">14.08</span>  <span class="token number">13.60</span>  <span class="token number">13.96</span><span class="token number">4</span>    <span class="token number">13.96</span>  <span class="token number">14.61</span>  <span class="token number">13.62</span>  <span class="token number">14.32</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">197</span>  <span class="token number">11.25</span>  <span class="token number">11.32</span>  <span class="token number">11.13</span>  <span class="token number">11.19</span><span class="token number">198</span>  <span class="token number">11.21</span>  <span class="token number">11.38</span>  <span class="token number">11.11</span>  <span class="token number">11.35</span><span class="token number">199</span>  <span class="token number">11.35</span>  <span class="token number">11.86</span>  <span class="token number">11.30</span>  <span class="token number">11.73</span><span class="token number">200</span>  <span class="token number">11.65</span>  <span class="token number">12.45</span>  <span class="token number">11.65</span>  <span class="token number">12.32</span><span class="token number">201</span>  <span class="token number">12.30</span>  <span class="token number">12.34</span>  <span class="token number">12.08</span>  <span class="token number">12.09</span><span class="token punctuation">[</span><span class="token number">202</span> rows x <span class="token number">4</span> columns<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>encoding: Unicode文本编码，默认 encoding&#x3D;’utf-8‘，含有中文文本建议修改参数值 encoding&#x3D;‘gbk’</p></li></ul><h4 id="2-写CSV文件"><a href="#2-写CSV文件" class="headerlink" title="2. 写CSV文件"></a>2. 写CSV文件</h4><p><strong>DataFrame.to_csv(path, index&#x3D;True, encoding&#x3D;None)</strong></p><ul><li><p>path: 表明文件系统位置的字符串，必选参数</p></li><li><p>index: 是否保存索引，默认 index&#x3D;True</p><ul><li><p>使用示例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token operator">>></span><span class="token operator">></span> df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                       columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'Ohio'</span><span class="token punctuation">,</span> <span class="token string">'Texas'</span><span class="token punctuation">,</span>                               <span class="token string">'California'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df   Ohio  Texas  Californiaa     <span class="token number">0</span>      <span class="token number">1</span>           <span class="token number">2</span>b     <span class="token number">3</span>      <span class="token number">4</span>           <span class="token number">5</span>c     <span class="token number">6</span>      <span class="token number">7</span>           <span class="token number">8</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'test.csv'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'test.csv'</span><span class="token punctuation">)</span>  Unnamed<span class="token punctuation">:</span> <span class="token number">0</span>  Ohio  Texas  California<span class="token number">0</span>          a     <span class="token number">0</span>      <span class="token number">1</span>           <span class="token number">2</span><span class="token number">1</span>          b     <span class="token number">3</span>      <span class="token number">4</span>           <span class="token number">5</span><span class="token number">2</span>          c     <span class="token number">6</span>      <span class="token number">7</span>           <span class="token number">8</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'test.csv'</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'test.csv'</span><span class="token punctuation">)</span>   Ohio  Texas  California<span class="token number">0</span>     <span class="token number">0</span>      <span class="token number">1</span>           <span class="token number">2</span><span class="token number">1</span>     <span class="token number">3</span>      <span class="token number">4</span>           <span class="token number">5</span><span class="token number">2</span>     <span class="token number">6</span>      <span class="token number">7</span>           <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>encoding: Unicode文本编码，默认 encoding&#x3D;’utf-8‘，含有中文文本建议修改参数值 encoding&#x3D;‘gbk’</p></li></ul><hr><h3 id="二、轴向上删除条目"><a href="#二、轴向上删除条目" class="headerlink" title="二、轴向上删除条目"></a>二、轴向上删除条目</h3><p><strong>DataFrame.drop(labels&#x3D;None, axis&#x3D;0, inplace&#x3D;False)</strong></p><ul><li><p>labels: 要删除的标签序列</p></li><li><p>axis: 删除的轴向，默认 axis&#x3D;0(行标签)</p></li><li><p>inplace: 修改被调用的对象，而不是生成一个备份， 默认 inplace&#x3D;False(不修改被调用的对象)</p><ul><li><p>使用示例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token operator">>></span><span class="token operator">></span> df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                       columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'Ohio'</span><span class="token punctuation">,</span> <span class="token string">'Texas'</span><span class="token punctuation">,</span>                               <span class="token string">'California'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df   Ohio  Texas  Californiaa     <span class="token number">0</span>      <span class="token number">1</span>           <span class="token number">2</span>b     <span class="token number">3</span>      <span class="token number">4</span>           <span class="token number">5</span>c     <span class="token number">6</span>      <span class="token number">7</span>           <span class="token number">8</span><span class="token comment"># 删除行标签</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>   Ohio  Texas  Californiab     <span class="token number">3</span>      <span class="token number">4</span>           <span class="token number">5</span>c     <span class="token number">6</span>      <span class="token number">7</span>           <span class="token number">8</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   Ohio  Texas  Californiab     <span class="token number">3</span>      <span class="token number">4</span>           <span class="token number">5</span><span class="token comment"># 删除列标签</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token string">'Ohio'</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>   Texas  Californiaa      <span class="token number">1</span>           <span class="token number">2</span>b      <span class="token number">4</span>           <span class="token number">5</span>c      <span class="token number">7</span>           <span class="token number">8</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Ohio'</span><span class="token punctuation">,</span> <span class="token string">'California'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>   Texasa      <span class="token number">1</span>b      <span class="token number">4</span>c      <span class="token number">7</span><span class="token comment"># 修改被调用的对象, 注意应用此方法没有返回值</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df   Ohio  Texas  Californiab     <span class="token number">3</span>      <span class="token number">4</span>           <span class="token number">5</span>c     <span class="token number">6</span>      <span class="token number">7</span>           <span class="token number">8</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Ohio'</span><span class="token punctuation">,</span> <span class="token string">'California'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>            inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df   Texasb      <span class="token number">4</span>c      <span class="token number">7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><hr><h3 id="三、灵活算术方法"><a href="#三、灵活算术方法" class="headerlink" title="三、灵活算术方法"></a>三、灵活算术方法</h3><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>add, radd</td><td>加法(+)</td></tr><tr><td>sub, rsub</td><td>减法(-)</td></tr><tr><td>div, rdiv</td><td>除法(&#x2F;)</td></tr><tr><td>floordiv, floordiv</td><td>整除(&#x2F;&#x2F;)</td></tr><tr><td>mul, rmul</td><td>乘法(*)</td></tr><tr><td>pow, rpow</td><td>幂次方(**)</td></tr></tbody></table><ul><li><p>使用示例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token operator">>></span><span class="token operator">></span> df1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">12.</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                       columns<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'abcd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">20.</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                       columns<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'abcde'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df1     a    b     c     d<span class="token number">0</span>  <span class="token number">0.0</span>  <span class="token number">1.0</span>   <span class="token number">2.0</span>   <span class="token number">3.0</span><span class="token number">1</span>  <span class="token number">4.0</span>  <span class="token number">5.0</span>   <span class="token number">6.0</span>   <span class="token number">7.0</span><span class="token number">2</span>  <span class="token number">8.0</span>  <span class="token number">9.0</span>  <span class="token number">10.0</span>  <span class="token number">11.0</span><span class="token operator">>></span><span class="token operator">></span> df2      a     b     c     d     e<span class="token number">0</span>   <span class="token number">0.0</span>   <span class="token number">1.0</span>   <span class="token number">2.0</span>   <span class="token number">3.0</span>   <span class="token number">4.0</span><span class="token number">1</span>   <span class="token number">5.0</span>   <span class="token number">6.0</span>   <span class="token number">7.0</span>   <span class="token number">8.0</span>   <span class="token number">9.0</span><span class="token number">2</span>  <span class="token number">10.0</span>  <span class="token number">11.0</span>  <span class="token number">12.0</span>  <span class="token number">13.0</span>  <span class="token number">14.0</span><span class="token number">3</span>  <span class="token number">15.0</span>  <span class="token number">16.0</span>  <span class="token number">17.0</span>  <span class="token number">18.0</span>  <span class="token number">19.0</span><span class="token comment"># 在不重叠的位置会出现空值</span><span class="token operator">>></span><span class="token operator">></span> df1 <span class="token operator">+</span> df2      a     b     c     d   e<span class="token number">0</span>   <span class="token number">0.0</span>   <span class="token number">2.0</span>   <span class="token number">4.0</span>   <span class="token number">6.0</span> NaN<span class="token number">1</span>   <span class="token number">9.0</span>  <span class="token number">11.0</span>  <span class="token number">13.0</span>  <span class="token number">15.0</span> NaN<span class="token number">2</span>  <span class="token number">18.0</span>  <span class="token number">20.0</span>  <span class="token number">22.0</span>  <span class="token number">24.0</span> NaN<span class="token number">3</span>   NaN   NaN   NaN   NaN NaN<span class="token comment"># 使用填充值的算术方法</span><span class="token operator">>></span><span class="token operator">></span> df1<span class="token punctuation">.</span>add<span class="token punctuation">(</span>df2<span class="token punctuation">,</span> fill_value<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>      a     b     c     d     e<span class="token number">0</span>   <span class="token number">0.0</span>   <span class="token number">2.0</span>   <span class="token number">4.0</span>   <span class="token number">6.0</span>   <span class="token number">4.0</span><span class="token number">1</span>   <span class="token number">9.0</span>  <span class="token number">11.0</span>  <span class="token number">13.0</span>  <span class="token number">15.0</span>   <span class="token number">9.0</span><span class="token number">2</span>  <span class="token number">18.0</span>  <span class="token number">20.0</span>  <span class="token number">22.0</span>  <span class="token number">24.0</span>  <span class="token number">14.0</span><span class="token number">3</span>  <span class="token number">15.0</span>  <span class="token number">16.0</span>  <span class="token number">17.0</span>  <span class="token number">18.0</span>  <span class="token number">19.0</span><span class="token comment"># r开头的方法表示参数是反转的，下面两个语句等价</span><span class="token operator">>></span><span class="token operator">></span> <span class="token number">1</span> <span class="token operator">/</span> df1       a         b         c         d<span class="token number">0</span>    inf  <span class="token number">1.000000</span>  <span class="token number">0.500000</span>  <span class="token number">0.333333</span><span class="token number">1</span>  <span class="token number">0.250</span>  <span class="token number">0.200000</span>  <span class="token number">0.166667</span>  <span class="token number">0.142857</span><span class="token number">2</span>  <span class="token number">0.125</span>  <span class="token number">0.111111</span>  <span class="token number">0.100000</span>  <span class="token number">0.090909</span><span class="token operator">>></span><span class="token operator">></span> df1<span class="token punctuation">.</span>rdiv<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>       a         b         c         d<span class="token number">0</span>    inf  <span class="token number">1.000000</span>  <span class="token number">0.500000</span>  <span class="token number">0.333333</span><span class="token number">1</span>  <span class="token number">0.250</span>  <span class="token number">0.200000</span>  <span class="token number">0.166667</span>  <span class="token number">0.142857</span><span class="token number">2</span>  <span class="token number">0.125</span>  <span class="token number">0.111111</span>  <span class="token number">0.100000</span>  <span class="token number">0.090909</span><span class="token comment"># ---DataFrame和Series间的操作--- #</span><span class="token operator">>></span><span class="token operator">></span> df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">12.</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'bde'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'Utah'</span><span class="token punctuation">,</span> <span class="token string">'Ohio'</span><span class="token punctuation">,</span> <span class="token string">'Texas'</span><span class="token punctuation">,</span> <span class="token string">'Oregon'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> series <span class="token operator">=</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> df          b     d     eUtah    <span class="token number">0.0</span>   <span class="token number">1.0</span>   <span class="token number">2.0</span>Ohio    <span class="token number">3.0</span>   <span class="token number">4.0</span>   <span class="token number">5.0</span>Texas   <span class="token number">6.0</span>   <span class="token number">7.0</span>   <span class="token number">8.0</span>Oregon  <span class="token number">9.0</span>  <span class="token number">10.0</span>  <span class="token number">11.0</span><span class="token operator">>></span><span class="token operator">></span> seriesb    <span class="token number">0.0</span>d    <span class="token number">1.0</span>e    <span class="token number">2.0</span>Name<span class="token punctuation">:</span> Utah<span class="token punctuation">,</span> dtype<span class="token punctuation">:</span> float64<span class="token comment"># 广播到各行</span><span class="token operator">>></span><span class="token operator">></span> df <span class="token operator">-</span> series          b    d    eUtah    <span class="token number">0.0</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span>Ohio    <span class="token number">3.0</span>  <span class="token number">3.0</span>  <span class="token number">3.0</span>Texas   <span class="token number">6.0</span>  <span class="token number">6.0</span>  <span class="token number">6.0</span>Oregon  <span class="token number">9.0</span>  <span class="token number">9.0</span>  <span class="token number">9.0</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>series<span class="token punctuation">)</span>          b    d    eUtah    <span class="token number">0.0</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span>Ohio    <span class="token number">3.0</span>  <span class="token number">3.0</span>  <span class="token number">3.0</span>Texas   <span class="token number">6.0</span>  <span class="token number">6.0</span>  <span class="token number">6.0</span>Oregon  <span class="token number">9.0</span>  <span class="token number">9.0</span>  <span class="token number">9.0</span><span class="token comment"># 广播到各列</span><span class="token operator">>></span><span class="token operator">></span> series <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> seriesUtah       <span class="token number">1.0</span>Ohio       <span class="token number">4.0</span>Texas      <span class="token number">7.0</span>Oregon    <span class="token number">10.0</span>Name<span class="token punctuation">:</span> d<span class="token punctuation">,</span> dtype<span class="token punctuation">:</span> float64<span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>series<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>          b    d    eUtah   <span class="token operator">-</span><span class="token number">1.0</span>  <span class="token number">0.0</span>  <span class="token number">1.0</span>Ohio   <span class="token operator">-</span><span class="token number">1.0</span>  <span class="token number">0.0</span>  <span class="token number">1.0</span>Texas  <span class="token operator">-</span><span class="token number">1.0</span>  <span class="token number">0.0</span>  <span class="token number">1.0</span>Oregon <span class="token operator">-</span><span class="token number">1.0</span>  <span class="token number">0.0</span>  <span class="token number">1.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="四、排序"><a href="#四、排序" class="headerlink" title="四、排序"></a>四、排序</h3><p><strong>DataFrame.sort_values(by, ascending&#x3D;True, inplace&#x3D;False)</strong></p><ul><li><p>by: 排序键</p></li><li><p>ascending: 排序方式，默认 ascending&#x3D;True(升序排序)</p></li><li><p>inplace: 修改被调用的对象，而不是生成一个备份， 默认 inplace&#x3D;False(不修改被调用的对象)</p><ul><li><p>使用示例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token operator">>></span><span class="token operator">></span> df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token string">'b'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token string">'c'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df   a  b  c<span class="token number">0</span>  <span class="token number">0</span>  <span class="token number">4</span>  <span class="token number">3</span><span class="token number">1</span>  <span class="token number">1</span>  <span class="token number">7</span>  <span class="token number">4</span><span class="token number">2</span>  <span class="token number">0</span> <span class="token operator">-</span><span class="token number">3</span> <span class="token operator">-</span><span class="token number">2</span><span class="token number">3</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">1</span><span class="token comment"># 单列排序</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">)</span>   a  b  c<span class="token number">2</span>  <span class="token number">0</span> <span class="token operator">-</span><span class="token number">3</span> <span class="token operator">-</span><span class="token number">2</span><span class="token number">3</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">1</span><span class="token number">0</span>  <span class="token number">0</span>  <span class="token number">4</span>  <span class="token number">3</span><span class="token number">1</span>  <span class="token number">1</span>  <span class="token number">7</span>  <span class="token number">4</span><span class="token comment"># 多列排序</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   a  b  c<span class="token number">2</span>  <span class="token number">0</span> <span class="token operator">-</span><span class="token number">3</span> <span class="token operator">-</span><span class="token number">2</span><span class="token number">0</span>  <span class="token number">0</span>  <span class="token number">4</span>  <span class="token number">3</span><span class="token number">3</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">1</span><span class="token number">1</span>  <span class="token number">1</span>  <span class="token number">7</span>  <span class="token number">4</span><span class="token comment"># 降序排序</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>   a  b  c<span class="token number">1</span>  <span class="token number">1</span>  <span class="token number">7</span>  <span class="token number">4</span><span class="token number">3</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">1</span><span class="token number">0</span>  <span class="token number">0</span>  <span class="token number">4</span>  <span class="token number">3</span><span class="token number">2</span>  <span class="token number">0</span> <span class="token operator">-</span><span class="token number">3</span> <span class="token operator">-</span><span class="token number">2</span><span class="token comment"># 修改被调用的对象, 注意应用此方法没有返回值</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>                   inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df   a  b  c<span class="token number">1</span>  <span class="token number">1</span>  <span class="token number">7</span>  <span class="token number">4</span><span class="token number">0</span>  <span class="token number">0</span>  <span class="token number">4</span>  <span class="token number">3</span><span class="token number">3</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">1</span><span class="token number">2</span>  <span class="token number">0</span> <span class="token operator">-</span><span class="token number">3</span> <span class="token operator">-</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><hr><h3 id="五、过滤子集"><a href="#五、过滤子集" class="headerlink" title="五、过滤子集"></a>五、过滤子集</h3><ul><li><p>使用示例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token operator">>></span><span class="token operator">></span> df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">'Time'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'2020-09-01'</span><span class="token punctuation">,</span> <span class="token string">'2020-09-01'</span><span class="token punctuation">,</span> <span class="token string">'2020-09-01'</span><span class="token punctuation">,</span> <span class="token string">'2020-09-01'</span><span class="token punctuation">,</span> <span class="token string">'2020-09-01'</span><span class="token punctuation">,</span> <span class="token string">'2020-09-01'</span><span class="token punctuation">,</span> <span class="token string">'2020-09-01'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                    <span class="token string">'stock'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'000009.SZ'</span><span class="token punctuation">,</span> <span class="token string">'000012.SZ'</span><span class="token punctuation">,</span> <span class="token string">'000021.SZ'</span><span class="token punctuation">,</span> <span class="token string">'000027.SZ'</span><span class="token punctuation">,</span> <span class="token string">'000028.SZ'</span><span class="token punctuation">,</span> <span class="token string">'000031.SZ'</span><span class="token punctuation">,</span> <span class="token string">'000039.SZ'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                    <span class="token string">'OPEN'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">7.65</span><span class="token punctuation">,</span> <span class="token number">5.86</span><span class="token punctuation">,</span> <span class="token number">25.32</span><span class="token punctuation">,</span> <span class="token number">5.73</span><span class="token punctuation">,</span> <span class="token number">54.18</span><span class="token punctuation">,</span> <span class="token number">5.48</span><span class="token punctuation">,</span> <span class="token number">8.79</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                    <span class="token string">'HIGH'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">7.85</span><span class="token punctuation">,</span> <span class="token number">5.86</span><span class="token punctuation">,</span> <span class="token number">25.8</span><span class="token punctuation">,</span> <span class="token number">5.73</span><span class="token punctuation">,</span> <span class="token number">54.79</span><span class="token punctuation">,</span> <span class="token number">5.52</span><span class="token punctuation">,</span> <span class="token number">8.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                    <span class="token string">'LOW'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">7.44</span><span class="token punctuation">,</span> <span class="token number">5.73</span><span class="token punctuation">,</span> <span class="token number">25.15</span><span class="token punctuation">,</span> <span class="token number">5.64</span><span class="token punctuation">,</span> <span class="token number">53.14</span><span class="token punctuation">,</span> <span class="token number">5.44</span><span class="token punctuation">,</span> <span class="token number">8.64</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                    <span class="token string">'CLOSE'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">7.72</span><span class="token punctuation">,</span> <span class="token number">5.83</span><span class="token punctuation">,</span> <span class="token number">25.45</span><span class="token punctuation">,</span> <span class="token number">5.7</span><span class="token punctuation">,</span> <span class="token number">53.7</span><span class="token punctuation">,</span> <span class="token number">5.5</span><span class="token punctuation">,</span> <span class="token number">8.75</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df         Time      stock   OPEN   HIGH    LOW  CLOSE<span class="token number">0</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000009</span><span class="token punctuation">.</span>SZ   <span class="token number">7.65</span>   <span class="token number">7.85</span>   <span class="token number">7.44</span>   <span class="token number">7.72</span><span class="token number">1</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000012</span><span class="token punctuation">.</span>SZ   <span class="token number">5.86</span>   <span class="token number">5.86</span>   <span class="token number">5.73</span>   <span class="token number">5.83</span><span class="token number">2</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000021</span><span class="token punctuation">.</span>SZ  <span class="token number">25.32</span>  <span class="token number">25.80</span>  <span class="token number">25.15</span>  <span class="token number">25.45</span><span class="token number">3</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000027</span><span class="token punctuation">.</span>SZ   <span class="token number">5.73</span>   <span class="token number">5.73</span>   <span class="token number">5.64</span>   <span class="token number">5.70</span><span class="token number">4</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000028</span><span class="token punctuation">.</span>SZ  <span class="token number">54.18</span>  <span class="token number">54.79</span>  <span class="token number">53.14</span>  <span class="token number">53.70</span><span class="token number">5</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000031</span><span class="token punctuation">.</span>SZ   <span class="token number">5.48</span>   <span class="token number">5.52</span>   <span class="token number">5.44</span>   <span class="token number">5.50</span><span class="token number">6</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000039</span><span class="token punctuation">.</span>SZ   <span class="token number">8.79</span>   <span class="token number">8.80</span>   <span class="token number">8.64</span>   <span class="token number">8.75</span><span class="token comment"># 计算表征Series(DataFrame一列)等于、大于或小于给定值</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'stock'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'000027.SZ'</span><span class="token punctuation">]</span>         Time      stock  OPEN  HIGH   LOW  CLOSE<span class="token number">3</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000027</span><span class="token punctuation">.</span>SZ  <span class="token number">5.73</span>  <span class="token number">5.73</span>  <span class="token number">5.64</span>    <span class="token number">5.7</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'stock'</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token string">'000027.SZ'</span><span class="token punctuation">]</span>         Time      stock   OPEN   HIGH    LOW  CLOSE<span class="token number">4</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000028</span><span class="token punctuation">.</span>SZ  <span class="token number">54.18</span>  <span class="token number">54.79</span>  <span class="token number">53.14</span>  <span class="token number">53.70</span><span class="token number">5</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000031</span><span class="token punctuation">.</span>SZ   <span class="token number">5.48</span>   <span class="token number">5.52</span>   <span class="token number">5.44</span>   <span class="token number">5.50</span><span class="token number">6</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000039</span><span class="token punctuation">.</span>SZ   <span class="token number">8.79</span>   <span class="token number">8.80</span>   <span class="token number">8.64</span>   <span class="token number">8.75</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'stock'</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token string">'000027.SZ'</span><span class="token punctuation">]</span>         Time      stock   OPEN   HIGH    LOW  CLOSE<span class="token number">0</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000009</span><span class="token punctuation">.</span>SZ   <span class="token number">7.65</span>   <span class="token number">7.85</span>   <span class="token number">7.44</span>   <span class="token number">7.72</span><span class="token number">1</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000012</span><span class="token punctuation">.</span>SZ   <span class="token number">5.86</span>   <span class="token number">5.86</span>   <span class="token number">5.73</span>   <span class="token number">5.83</span><span class="token number">2</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000021</span><span class="token punctuation">.</span>SZ  <span class="token number">25.32</span>  <span class="token number">25.80</span>  <span class="token number">25.15</span>  <span class="token number">25.45</span><span class="token comment"># 计算表征Series(DataFrame一列)包含于传入序列</span><span class="token operator">>></span><span class="token operator">></span> choice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'000009.SZ'</span><span class="token punctuation">,</span> <span class="token string">'000012.SZ'</span><span class="token punctuation">,</span> <span class="token string">'000027.SZ'</span><span class="token punctuation">,</span> <span class="token string">'000039.SZ'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'stock'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>choice<span class="token punctuation">)</span><span class="token punctuation">]</span>         Time      stock  OPEN  HIGH   LOW  CLOSE<span class="token number">0</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000009</span><span class="token punctuation">.</span>SZ  <span class="token number">7.65</span>  <span class="token number">7.85</span>  <span class="token number">7.44</span>   <span class="token number">7.72</span><span class="token number">1</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000012</span><span class="token punctuation">.</span>SZ  <span class="token number">5.86</span>  <span class="token number">5.86</span>  <span class="token number">5.73</span>   <span class="token number">5.83</span><span class="token number">3</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000027</span><span class="token punctuation">.</span>SZ  <span class="token number">5.73</span>  <span class="token number">5.73</span>  <span class="token number">5.64</span>   <span class="token number">5.70</span><span class="token number">6</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">000039</span><span class="token punctuation">.</span>SZ  <span class="token number">8.79</span>  <span class="token number">8.80</span>  <span class="token number">8.64</span>   <span class="token number">8.75</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="六、处理缺失值"><a href="#六、处理缺失值" class="headerlink" title="六、处理缺失值"></a>六、处理缺失值</h3><h4 id="1-过滤缺失值"><a href="#1-过滤缺失值" class="headerlink" title="1. 过滤缺失值"></a>1. 过滤缺失值</h4><p><strong>DataFrame.dropna(axis&#x3D;0, inplace&#x3D;False, how&#x3D;None)</strong></p><ul><li><p>axis: 过滤的轴向，默认 axis&#x3D;0(行)</p></li><li><p>inplace: 修改被调用的对象，而不是生成一个备份， 默认 inplace&#x3D;False(不修改被调用的对象)</p></li><li><p>how: 删除方式，默认 how&#x3D;’any’(删除包含缺失值的行或列)</p><ul><li><p>使用示例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">from</span> numpy <span class="token keyword">import</span> nan <span class="token keyword">as</span> NA<span class="token operator">>></span><span class="token operator">></span> df1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.</span><span class="token punctuation">,</span> <span class="token number">6.5</span><span class="token punctuation">,</span> <span class="token number">3.</span><span class="token punctuation">,</span> <span class="token number">2.6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                         <span class="token punctuation">[</span><span class="token number">1.</span><span class="token punctuation">,</span> <span class="token number">6.5</span><span class="token punctuation">,</span> <span class="token number">3.</span><span class="token punctuation">,</span> NA<span class="token punctuation">]</span><span class="token punctuation">,</span>                         <span class="token punctuation">[</span><span class="token number">1.</span><span class="token punctuation">,</span> NA<span class="token punctuation">,</span> NA<span class="token punctuation">,</span> NA<span class="token punctuation">]</span><span class="token punctuation">,</span>                         <span class="token punctuation">[</span>NA<span class="token punctuation">,</span> NA<span class="token punctuation">,</span> NA<span class="token punctuation">,</span> NA<span class="token punctuation">]</span><span class="token punctuation">,</span>                         <span class="token punctuation">[</span>NA<span class="token punctuation">,</span> <span class="token number">6.5</span><span class="token punctuation">,</span> <span class="token number">3.</span><span class="token punctuation">,</span> NA<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df2 <span class="token operator">=</span> df1<span class="token punctuation">.</span>T<span class="token operator">>></span><span class="token operator">></span> df1     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span>    <span class="token number">3</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">3.0</span>  <span class="token number">2.6</span><span class="token number">1</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">3.0</span>  NaN<span class="token number">2</span>  <span class="token number">1.0</span>  NaN  NaN  NaN<span class="token number">3</span>  NaN  NaN  NaN  NaN<span class="token number">4</span>  NaN  <span class="token number">6.5</span>  <span class="token number">3.0</span>  NaN<span class="token operator">>></span><span class="token operator">></span> df2     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span>   <span class="token number">3</span>    <span class="token number">4</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">1.0</span>  <span class="token number">1.0</span> NaN  NaN<span class="token number">1</span>  <span class="token number">6.5</span>  <span class="token number">6.5</span>  NaN NaN  <span class="token number">6.5</span><span class="token number">2</span>  <span class="token number">3.0</span>  <span class="token number">3.0</span>  NaN NaN  <span class="token number">3.0</span><span class="token number">3</span>  <span class="token number">2.6</span>  NaN  NaN NaN  NaN<span class="token comment"># 删除包含缺失值的行</span><span class="token operator">>></span><span class="token operator">></span> df1<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span>    <span class="token number">3</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">3.0</span>  <span class="token number">2.6</span><span class="token comment"># 删除包含缺失值的列</span><span class="token operator">>></span><span class="token operator">></span> df2<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token number">0</span><span class="token number">0</span>  <span class="token number">1.0</span><span class="token number">1</span>  <span class="token number">6.5</span><span class="token number">2</span>  <span class="token number">3.0</span><span class="token number">3</span>  <span class="token number">2.6</span><span class="token comment"># 删除所有值均为空的行</span><span class="token operator">>></span><span class="token operator">></span> df1<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>how<span class="token operator">=</span><span class="token string">'all'</span><span class="token punctuation">)</span>     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span>    <span class="token number">3</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">3.0</span>  <span class="token number">2.6</span><span class="token number">1</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">3.0</span>  NaN<span class="token number">2</span>  <span class="token number">1.0</span>  NaN  NaN  NaN<span class="token number">4</span>  NaN  <span class="token number">6.5</span>  <span class="token number">3.0</span>  NaN<span class="token comment"># 删除所有值均为空的列</span><span class="token operator">>></span><span class="token operator">></span> df2<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">'all'</span><span class="token punctuation">)</span>     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span>    <span class="token number">4</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">1.0</span>  <span class="token number">1.0</span>  NaN<span class="token number">1</span>  <span class="token number">6.5</span>  <span class="token number">6.5</span>  NaN  <span class="token number">6.5</span><span class="token number">2</span>  <span class="token number">3.0</span>  <span class="token number">3.0</span>  NaN  <span class="token number">3.0</span><span class="token number">3</span>  <span class="token number">2.6</span>  NaN  NaN  NaN<span class="token comment"># 修改被调用的对象, 注意应用此方法没有返回值</span><span class="token operator">>></span><span class="token operator">></span> df1<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df1     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span>    <span class="token number">3</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">3.0</span>  <span class="token number">2.6</span><span class="token operator">>></span><span class="token operator">></span> df2<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">'all'</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df2     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span>    <span class="token number">4</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">1.0</span>  <span class="token number">1.0</span>  NaN<span class="token number">1</span>  <span class="token number">6.5</span>  <span class="token number">6.5</span>  NaN  <span class="token number">6.5</span><span class="token number">2</span>  <span class="token number">3.0</span>  <span class="token number">3.0</span>  NaN  <span class="token number">3.0</span><span class="token number">3</span>  <span class="token number">2.6</span>  NaN  NaN  NaN<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h4 id="2-补全缺失值"><a href="#2-补全缺失值" class="headerlink" title="2. 补全缺失值"></a>2. 补全缺失值</h4><p><strong>DataFrame.fillna(value, method&#x3D;None, axis&#x3D;None, inplace&#x3D;False, limit&#x3D;None)</strong></p><ul><li><p>value: 标量值或字典型对象用于填充缺失值</p></li><li><p>method: 插值方法</p></li><li><p>axis: 需要填充的轴，默认 axis&#x3D;0</p></li><li><p>inplace: 修改被调用的对象，而不是生成一个备份， 默认 inplace&#x3D;False(不修改被调用的对象)</p></li><li><p>limit: 用于填充时最大的填充范围</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">from</span> numpy <span class="token keyword">import</span> nan <span class="token keyword">as</span> NA<span class="token operator">>></span><span class="token operator">></span> df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.</span><span class="token punctuation">,</span> <span class="token number">6.5</span><span class="token punctuation">,</span> <span class="token number">4.</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2.</span><span class="token punctuation">,</span> NA<span class="token punctuation">,</span> NA<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>NA<span class="token punctuation">,</span> NA<span class="token punctuation">,</span> NA<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>NA<span class="token punctuation">,</span> <span class="token number">2.3</span><span class="token punctuation">,</span> <span class="token number">3.2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">1</span>  <span class="token number">2.0</span>  NaN  NaN<span class="token number">2</span>  NaN  NaN  NaN<span class="token number">3</span>  NaN  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token comment"># 使用常值代替缺失值</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">1</span>  <span class="token number">2.0</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span><span class="token number">2</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span><span class="token number">3</span>  <span class="token number">0.0</span>  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token comment"># 使用字典为不同列设置不同的填充值</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">1</span>  <span class="token number">2.0</span>  <span class="token number">0.5</span>  <span class="token number">1.0</span><span class="token number">2</span>  NaN  <span class="token number">0.5</span>  <span class="token number">1.0</span><span class="token number">3</span>  NaN  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token comment"># 向后填充</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'ffill'</span><span class="token punctuation">)</span>     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">1</span>  <span class="token number">2.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">2</span>  <span class="token number">2.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">3</span>  <span class="token number">2.0</span>  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token comment"># 向后填充，最大填充范围为1</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'ffill'</span><span class="token punctuation">,</span> limit<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">1</span>  <span class="token number">2.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">2</span>  <span class="token number">2.0</span>  NaN  NaN<span class="token number">3</span>  NaN  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token comment"># 向前填充</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'bfill'</span><span class="token punctuation">)</span>     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">1</span>  <span class="token number">2.0</span>  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token number">2</span>  NaN  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token number">3</span>  NaN  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token comment"># 向前填充，最大填充范围为1</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'bfill'</span><span class="token punctuation">,</span> limit<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">1</span>  <span class="token number">2.0</span>  NaN  NaN<span class="token number">2</span>  NaN  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token number">3</span>  NaN  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token comment"># 向右填充</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'ffill'</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">1</span>  <span class="token number">2.0</span>  <span class="token number">2.0</span>  <span class="token number">2.0</span><span class="token number">2</span>  NaN  NaN  NaN<span class="token number">3</span>  NaN  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token comment"># 向右填充，最大填充范围为1</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'ffill'</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> limit<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">1</span>  <span class="token number">2.0</span>  <span class="token number">2.0</span>  NaN<span class="token number">2</span>  NaN  NaN  NaN<span class="token number">3</span>  NaN  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token comment"># 向左填充</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'bfill'</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">1</span>  <span class="token number">2.0</span>  NaN  NaN<span class="token number">2</span>  NaN  NaN  NaN<span class="token number">3</span>  <span class="token number">2.3</span>  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token comment"># 向左填充，最大填充范围为1</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1.5</span><span class="token operator">>></span><span class="token operator">></span> df     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">1</span>  <span class="token number">2.0</span>  NaN  NaN<span class="token number">2</span>  NaN  NaN  <span class="token number">1.5</span><span class="token number">3</span>  NaN  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'bfill'</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> limit<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">1</span>  <span class="token number">2.0</span>  NaN  NaN<span class="token number">2</span>  NaN  <span class="token number">1.5</span>  <span class="token number">1.5</span><span class="token number">3</span>  <span class="token number">2.3</span>  <span class="token number">2.3</span>  <span class="token number">3.2</span><span class="token comment"># 修改被调用的对象, 注意应用此方法没有返回值</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'bfill'</span><span class="token punctuation">,</span> limit<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df     <span class="token number">0</span>    <span class="token number">1</span>    <span class="token number">2</span><span class="token number">0</span>  <span class="token number">1.0</span>  <span class="token number">6.5</span>  <span class="token number">4.0</span><span class="token number">1</span>  <span class="token number">2.0</span>  <span class="token number">2.3</span>  <span class="token number">1.5</span><span class="token number">2</span>  NaN  <span class="token number">2.3</span>  <span class="token number">1.5</span><span class="token number">3</span>  NaN  <span class="token number">2.3</span>  <span class="token number">3.2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h3 id="七、重命名轴索引"><a href="#七、重命名轴索引" class="headerlink" title="七、重命名轴索引"></a>七、重命名轴索引</h3><p><strong>DataFrame.rename(index&#x3D;None, columns&#x3D;None, inplace&#x3D;False)</strong></p><ul><li><p>index: 要修改的行索引</p></li><li><p>columns: 要修改的列索引</p></li><li><p>inplace: 修改被调用的对象，而不是生成一个备份， 默认 inplace&#x3D;False(不修改被调用的对象)</p><ul><li><p>使用示例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token operator">>></span><span class="token operator">></span> df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                       columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'Ohio'</span><span class="token punctuation">,</span> <span class="token string">'Texas'</span><span class="token punctuation">,</span>                               <span class="token string">'California'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df   Ohio  Texas  Californiaa     <span class="token number">0</span>      <span class="token number">1</span>           <span class="token number">2</span>b     <span class="token number">3</span>      <span class="token number">4</span>           <span class="token number">5</span>c     <span class="token number">6</span>      <span class="token number">7</span>           <span class="token number">8</span><span class="token comment"># 只修改行索引</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'b'</span><span class="token punctuation">:</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">:</span> <span class="token string">'e'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   Ohio  Texas  Californiaa     <span class="token number">0</span>      <span class="token number">1</span>           <span class="token number">2</span>d     <span class="token number">3</span>      <span class="token number">4</span>           <span class="token number">5</span>e     <span class="token number">6</span>      <span class="token number">7</span>           <span class="token number">8</span><span class="token comment"># 只修改列索引</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'Ohio'</span><span class="token punctuation">:</span> <span class="token string">'Utah'</span><span class="token punctuation">,</span>                        <span class="token string">'Texas'</span><span class="token punctuation">:</span> <span class="token string">'Colorado'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   Utah  Colorado  Californiaa     <span class="token number">0</span>         <span class="token number">1</span>           <span class="token number">2</span>b     <span class="token number">3</span>         <span class="token number">4</span>           <span class="token number">5</span>c     <span class="token number">6</span>         <span class="token number">7</span>           <span class="token number">8</span><span class="token comment"># 同时修改行索引和列索引</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'b'</span><span class="token punctuation">:</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">:</span> <span class="token string">'e'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>               columns<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'Ohio'</span><span class="token punctuation">:</span> <span class="token string">'Utah'</span><span class="token punctuation">,</span>                        <span class="token string">'Texas'</span><span class="token punctuation">:</span> <span class="token string">'Colorado'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   Utah  Colorado  Californiaa     <span class="token number">0</span>         <span class="token number">1</span>           <span class="token number">2</span>d     <span class="token number">3</span>         <span class="token number">4</span>           <span class="token number">5</span>e     <span class="token number">6</span>         <span class="token number">7</span>           <span class="token number">8</span><span class="token comment"># 修改被调用的对象, 注意应用此方法没有返回值</span><span class="token operator">>></span><span class="token operator">></span> df<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'b'</span><span class="token punctuation">:</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">:</span> <span class="token string">'e'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>               columns<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'Ohio'</span><span class="token punctuation">:</span> <span class="token string">'Utah'</span><span class="token punctuation">,</span>                        <span class="token string">'Texas'</span><span class="token punctuation">:</span> <span class="token string">'Colorado'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>              inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> df   Utah  Colorado  Californiaa     <span class="token number">0</span>         <span class="token number">1</span>           <span class="token number">2</span>d     <span class="token number">3</span>         <span class="token number">4</span>           <span class="token number">5</span>e     <span class="token number">6</span>         <span class="token number">7</span>           <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
